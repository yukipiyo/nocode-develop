{"version":3,"sources":["logo.svg","pages/develop.tsx","app.tsx","reportWebVitals.ts","index.tsx"],"names":["CameraDeviceTest","useState","stream","setStream","refVideo","useRef","refCanvas","constraints","audio","video","width","height","facingMode","className","id","ref","autoPlay","playsInline","onClick","getVideoTracks","forEach","camera","stop","current","navigator","mediaDevices","getUserMedia","then","srcObject","onloadedmetadata","e","play","catch","err","console","log","name","message","canvas","ctx","getContext","drawImage","Develop","ReactApp","src","logo","alt","to","App","path","exact","component","DevelopPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAAe,MAA0B,iC,+BCYnCA,EAAmB,WAAoB,IAAD,EACZC,mBAA6B,MADjB,mBACjCC,EADiC,KACzBC,EADyB,KAGlCC,EAAWC,iBAAgC,MAC3CC,EAAYD,iBAAiC,MAE7CE,EAAc,CAChBC,OAAO,EACPC,MAAO,CACHC,MAAO,IACPC,OAAQ,IACRC,WAAY,SAqCpB,OACI,qBAAKC,UAAU,OAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,sBAAKA,UAAU,4CAAf,UACI,uBACIC,GAAG,SACHJ,MAAM,MACNC,OAAO,MACPI,IAAKX,EACLS,UAAU,iBACVG,UAAQ,EACRC,aAAW,IAEf,wBACIH,GAAG,UACHJ,MAAM,MACNC,OAAO,MACPI,IAAKT,EACLO,UAAU,wBAEd,sBAAKA,UAAU,kBAAf,UACI,wBAAQK,QArDH,WACN,OAAXhB,GACAA,EAAOiB,iBAAiBC,SAAQ,SAACC,GAC7BA,EAAOC,UAIf,IAAMb,EAAQL,EAASmB,QAClBd,GACLe,UAAUC,aACLC,aAAanB,GACboB,MAAK,SAACzB,GACHC,EAAUD,GACVO,EAAMmB,UAAY1B,EAClBO,EAAMoB,iBAAmB,SAACC,GACtBrB,EAAMsB,WAGbC,OAAM,SAACC,GACJC,QAAQC,IAAIF,EAAIG,KAAO,KAAOH,EAAII,aAkCSxB,UAAU,mCAA7C,4CAGA,wBAAQK,QAjCC,WACzB,IAAMT,EAAQL,EAASmB,QACjBe,EAAShC,EAAUiB,QACzB,GAAKe,GAAW7B,EAAhB,CACA,IAAM8B,EAAMD,EAAOE,WAAW,MACzBD,GACLA,EAAIE,UAAUhC,EAAO,EAAG,EAAG6B,EAAO5B,MAAO4B,EAAO3B,UA2BOE,UAAU,mCAAjD,uDAUT6B,EA3FC,WACZ,OACI,sBAAK7B,UAAU,YAAf,UACI,qBAAKA,UAAU,OAAf,8DACA,cAAC,EAAD,QCYN8B,EAAW,WACb,OACI,qBAAK9B,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,qBAAK+B,IAAKC,EAAMhC,UAAU,WAAWiC,IAAI,SACzC,cAAC,IAAD,CAAMC,GAAG,0BAA0BlC,UAAU,WAA7C,4CAQDmC,EAzBH,WACR,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,kBAAkBC,OAAK,EAACC,UAAWR,IAC/C,cAAC,IAAD,CAAOM,KAAK,0BAA0BC,OAAK,EAACC,UAAWC,IACvD,cAAC,IAAD,UACI,cAAC,IAAD,CAAUL,GAAG,0BCCdM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.22370901.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useRef } from \"react\";\nimport \"./css/develop.css\";\n\nconst Develop = (): JSX.Element => {\n    return (\n        <div className=\"container\">\n            <div className=\"mt-3\">カメラ接続テスト</div>\n            <CameraDeviceTest />\n        </div>\n    );\n};\n\nconst CameraDeviceTest = (): JSX.Element => {\n    const [stream, setStream] = useState<MediaStream | null>(null);\n\n    const refVideo = useRef<HTMLVideoElement | null>(null);\n    const refCanvas = useRef<HTMLCanvasElement | null>(null);\n\n    const constraints = {\n        audio: false,\n        video: {\n            width: 640,\n            height: 360,\n            facingMode: \"user\", // front camera\n            // facingMode: { exact: \"environment\" }, // rear camera\n        },\n    };\n\n    const handleOpenCamera = () => {\n        if (stream !== null) {\n            stream.getVideoTracks().forEach((camera) => {\n                camera.stop();\n            });\n        }\n\n        const video = refVideo.current;\n        if (!video) return;\n        navigator.mediaDevices\n            .getUserMedia(constraints)\n            .then((stream) => {\n                setStream(stream);\n                video.srcObject = stream;\n                video.onloadedmetadata = (e) => {\n                    video.play();\n                };\n            })\n            .catch((err) => {\n                console.log(err.name + \": \" + err.message);\n            });\n    };\n\n    const handleCameraShooting = () => {\n        const video = refVideo.current;\n        const canvas = refCanvas.current;\n        if (!canvas || !video) return;\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    };\n\n    return (\n        <div className=\"test\">\n            <div className=\"d-flex flex-column mt-3\">\n                <div className=\"d-flex flex-column justify-content-center\">\n                    <video\n                        id=\"camera\"\n                        width=\"640\"\n                        height=\"360\"\n                        ref={refVideo}\n                        className=\"border rounded\"\n                        autoPlay\n                        playsInline\n                    ></video>\n                    <canvas\n                        id=\"picture\"\n                        width=\"640\"\n                        height=\"360\"\n                        ref={refCanvas}\n                        className=\"border rounded mt-3\"\n                    ></canvas>\n                    <div className=\"d-flex flex-row\">\n                        <button onClick={handleOpenCamera} className=\"btn btn-outline-dark camera mt-3\">\n                            カメラ起動\n                        </button>\n                        <button onClick={handleCameraShooting} className=\"btn btn-outline-dark camera mt-3\">\n                            カメラ撮影\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Develop;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\nimport \"./app.css\";\n\nimport DevelopPage from \"./pages/develop\";\n\nconst App = (): JSX.Element => {\n    return (\n        <Router>\n            <Route path=\"/nocode-develop\" exact component={ReactApp} />\n            <Route path=\"/nocode-develop/develop\" exact component={DevelopPage} />\n            <Route>\n                <Redirect to=\"/nocode-develop\" />\n            </Route>\n        </Router>\n    );\n};\n\nconst ReactApp = (): JSX.Element => {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <Link to=\"/nocode-develop/develop\" className=\"App-link\">\n                    Go to evelopment page...\n                </Link>\n            </header>\n        </div>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import \"./index.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}